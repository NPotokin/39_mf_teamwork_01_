events {
}

http {
  include mime.types;
  log_format compression '$remote_addr - $remote_user [$time_local] '
                          '"$request" $status $body_bytes_sent '
                          '"$http_referer" "$http_user_agent" "$gzip_ratio"';
  server {
    listen 80;
    listen [::]:80;
    server_name ${DOMAIN} www.${DOMAIN};

    location / {
      return 301 https://$host$request_uri;
    }

    location ^~ /.well-known/acme-challenge/ {
      root /var/www/certbot;
      try_files $uri =404;
    }
}

  server {
    listen 443 ssl http2;
    listen [::]:443 ssl http2;
    server_name ${DOMAIN} www.${DOMAIN};

    include /nginx/ssl.conf;

    access_log /spool/logs/nginx-access.log compression;
    charset utf-8;

    location / {
      proxy_pass            http://server:3001;
      proxy_set_header      Host $host;
      proxy_set_header      X-Real-IP $remote_addr;
      proxy_set_header      X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header      X-Forwarded-Proto $scheme;
      proxy_set_header      Cache-Control no-cache;

      client_max_body_size  128m;

      add_header            Last-Modified $date_gmt;
      add_header            Cache-Control 'no-store, no-cache, must-revalidate, proxy-revalidate, max-age = 0';

      if_modified_since     off;
      expires               off;
      etag                  off;
      add_header            Access-Control-Allow-Origin *;
    }

    location /ping {
        add_header content-type "application/json";
        return 200 ' {"status": "ok", "message": "pong", "timestamp": "$date_gmt"}';
    }

    add_header X-Content-Type-Options "nosniff";
  }

}
